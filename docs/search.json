{
  "articles": [
    {
      "path": "01-r-tidyverse.html",
      "title": "Tidyverse",
      "author": [],
      "contents": "\r\n\r\nContents\r\nIntroducción\r\nDatos tidy\r\n\r\nIntroducción\r\nTidyverse es una colección de paquetes de R enfocados en ciencia de datos, los cuales “comparten filosofía de diseño, gramática y estructuras de datos”, de acuerdo con el sitio web de la iniciativa. El concepto de Tidyverse fue introducido por Hadley Wickham, quien también programó varios de sus paquetes.\r\nEl núcleo de Tidyverse está compuesto por ocho paquetes base, los cuales proveen las funcionalidades utilizadas más frecuentemente en análisis de datos. Hay otros paquetes para tareas más especifícas relacionadas con importación, limpieza y modelado de datos, entre otras áreas. Los paquetes de Tidyverse son de los más descargados, entre la totalidad de paquetes de R.\r\nDatos tidy\r\nLos paquetes de Tidyverse trabajan con datos tidy (i.e. ordenados, organizados), un concepto también introducido por Hadley Wickham y que se está relacionado con la organización de los datos en estructuras rectangulares de filas y columnas, similares a las tablas o matrices.\r\nSegún Wickham, los datos tidy deben cumplir con tres características:\r\nCada variable debe tener su propia columna.\r\nCada observación debe tener su propia fila.\r\nCada valor debe tener su propia celda.\r\nEstas características se ilustran en la figura 1.\r\nFigura 1: Datos tidy. Imagen de Hadley Wickham (https://r4ds.had.co.nz/tidy-data.html)El empleo de este modelo de datos uniforme en todos los paquetes de Tidyverse posibilita aprender y usar sus funciones con mayor facilidad. Además, permite invertir menos esfuerzo en lidiar con diferentes modelos de datos y así dedicar más tiempo y esfuerzo en los problemas de análisis a resolver.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-22T23:38:26-06:00"
    },
    {
      "path": "02-r-tidyverse-dplyr.html",
      "title": "Tidyverse",
      "author": [],
      "contents": "\r\n\r\nContents\r\nPreparativos\r\nCarga de paquetes\r\nConjuntos de datos utilizados\r\n\r\ndplyr\r\nLa función mutate()\r\n\r\n\r\nPreparativos\r\nCarga de paquetes\r\n\r\n\r\n# Carga de dplyr\r\nlibrary(dplyr)\r\n\r\n\r\n\r\nConjuntos de datos utilizados\r\nDatos hidrológicos\r\n\r\n# Carga de datos desde un archivo CSV\r\nrios <- \r\n  read.csv(\r\n    file='https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/hidrologia/fdc/FDC.csv' \r\n  )\r\n\r\n\r\n\r\nCasos de COVID-19 en Costa Rica\r\n\r\n# Carga de datos desde un archivo CSV\r\n# covid <- \r\n#   read.csv(\r\n#     file='https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/ministerio-salud/covid/ultimafecha_CSV_GENERAL.csv', \r\n#     sep = \",\"\r\n#   )\r\n\r\n\r\n\r\ndplyr\r\nEl paquete dplyr de Tidyverse es descrito como una “gramática para la manipulación de datos, la cual proporciona un conjunto consistente de verbos que ayuda a solucionar los retos de manipulación de datos más comunes”. Los principales “verbos” (i.e. funciones) de esta gramática son:\r\nmutate(): crea nuevas variables, las cuales se expresan como funciones de variables existentes.\r\nselect(): selecciona variables con base en sus nombres.\r\nfilter(): selecciona observaciones con base en sus valores.\r\nsummarise(): agrupa y resume valores.\r\narrange(): cambia el orden de los registros.\r\nTodas estas operaciones pueden combinarse con la función group_by(), la cual ejecuta cualquiera de las operaciones anteriores “en grupo”. Además, dplyr proporciona funciones adicionales para tareas más específicas.\r\nTodas las funciones de dplyr trabajan de manera similar:\r\nEl primer argumento es un data frame. Puede omitirse si la función recibe el data frame a través del operador pipe.\r\nLos argumentos siguientes describen que hacer con el data frame, utilizando los nombres de las variables (sin comillas).\r\nEl resultado es un nuevo data frame.\r\nLas funciones de dplyr pueden encadenarse a través del operador pipe (%>%) (tubo), para formar pipelines (tuberías). En este contexto, un pipeline consiste de una cadena de procesos conectados de forma tal que la salida de cada proceso de la cadena es la entrada del próximo. Esto permite la comunicación y sincronización entre los procesos.\r\nLa función mutate()\r\nLa función mutate() crea nuevas variables en un data frame, las cuales se expresan como funciones de variables existentes. También puede utilizarse para recalcular una variable ya existente.\r\nEn el siguiente bloque de código, se utiliza mutate() para crear una nueva variable en el data frame de datos de ríos. Se utilizan también otras funciones para renombrar las columnas y desplegar los datos.\r\n\r\n\r\n# Despliegue de la estructura del data frame\r\nstr(rios)\r\n\r\n\r\n'data.frame':   3845 obs. of  3 variables:\r\n $ Tiempo             : chr  \"6/22/1973\" \"6/23/1973\" \"6/24/1973\" \"6/25/1973\" ...\r\n $ Pandora.mm..637km2.: num  7.46 6.17 6.32 7.8 7.72 7.83 5.02 3.84 3.21 2.77 ...\r\n $ Banano.mm..90km2.  : num  21 14.8 27.6 19.7 15.2 ...\r\n\r\n# Despliegue de los primeros registros\r\nslice_head(rios, n = 5)\r\n\r\n\r\n     Tiempo Pandora.mm..637km2. Banano.mm..90km2.\r\n1 6/22/1973                7.46             21.02\r\n2 6/23/1973                6.17             14.78\r\n3 6/24/1973                6.32             27.65\r\n4 6/25/1973                7.80             19.68\r\n5 6/26/1973                7.72             15.17\r\n\r\n# Cambio de nombre de las columnas mediante rename()\r\nrios <-\r\n  rios %>%\r\n  rename(fecha = Tiempo,\r\n         pandora = Pandora.mm..637km2.,\r\n         banano = Banano.mm..90km2.)\r\n\r\n# Conversión de una columna a tipo Date y creación de una nueva columna\r\nrios <-\r\n  rios %>%\r\n  mutate(fecha = strptime(fecha, format = \"%m/%d/%Y\"),\r\n         promedio = (pandora + banano) / 2)\r\n\r\n# Verificación de los cambios en la estructura del data frame\r\nstr(rios)\r\n\r\n\r\n'data.frame':   3845 obs. of  4 variables:\r\n $ fecha   : POSIXlt, format: \"1973-06-22\" ...\r\n $ pandora : num  7.46 6.17 6.32 7.8 7.72 7.83 5.02 3.84 3.21 2.77 ...\r\n $ banano  : num  21 14.8 27.6 19.7 15.2 ...\r\n $ promedio: num  14.2 10.5 17 13.7 11.4 ...\r\n\r\n# Visualización de los valores de la nueva columna\r\nslice_head(rios, n = 5)\r\n\r\n\r\n       fecha pandora banano promedio\r\n1 1973-06-22    7.46  21.02   14.240\r\n2 1973-06-23    6.17  14.78   10.475\r\n3 1973-06-24    6.32  27.65   16.985\r\n4 1973-06-25    7.80  19.68   13.740\r\n5 1973-06-26    7.72  15.17   11.445\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-23T15:23:40-06:00"
    },
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-22T17:18:07-06:00"
    },
    {
      "path": "index.html",
      "title": "GF0604 Procesamiento de datos geográficos 2021-I. Lección 13",
      "description": "Curso GF0604 Procesamiento de datos geográficos. Escuela de Geografía, Universidad de Costa Rica. Primer ciclo lectivo 2021. Lección 13.\n",
      "author": [
        {
          "name": "Manuel Vargas",
          "url": "https://github.com/mfvargas"
        }
      ],
      "contents": "\r\n\r\nContents\r\nResumen\r\nTrabajo previo\r\nContenidos\r\n\r\nResumen\r\nEn esta lección se estudia Tidyverse, una colección de paquetes de R enfocados en ciencia de datos.\r\nTrabajo previo\r\nLea los capítulos del 1 al 8 de Wickham, H., & Grolemund, G. (2017). R for Data Science: Import, Tidy, Transform,Visualize, and Model Data.\r\nContenidos\r\n01 Introducción a Tidyverse02 El paquete dplyr\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-22T23:37:30-06:00"
    }
  ],
  "collections": []
}
