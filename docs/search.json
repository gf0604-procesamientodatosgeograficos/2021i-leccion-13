{
  "articles": [
    {
      "path": "01-r-tidyverse.html",
      "title": "Tidyverse",
      "author": [],
      "contents": "\r\n\r\nContents\r\nIntroducción\r\nDatos tidy\r\n\r\nIntroducción\r\nTidyverse es una colección de paquetes de R enfocados en ciencia de datos, los cuales “comparten filosofía de diseño, gramática y estructuras de datos”, de acuerdo con el sitio web de la iniciativa. El concepto de Tidyverse fue introducido por Hadley Wickham, quien también programó varios de sus paquetes.\r\nEl núcleo de Tidyverse está compuesto por ocho paquetes base, los cuales proveen las funcionalidades utilizadas más frecuentemente en análisis de datos. Hay otros paquetes para tareas más especifícas relacionadas con importación, limpieza y modelado de datos, entre otras áreas. Los paquetes de Tidyverse son de los más descargados, entre la totalidad de paquetes de R.\r\nDatos tidy\r\nLos paquetes de Tidyverse trabajan con datos tidy (i.e. ordenados, organizados), un concepto también introducido por Hadley Wickham y que se está relacionado con la organización de los datos en estructuras rectangulares de filas y columnas, similares a las tablas o matrices.\r\nSegún Wickham, los datos tidy deben cumplir con tres características:\r\nCada variable debe tener su propia columna.\r\nCada observación debe tener su propia fila.\r\nCada valor debe tener su propia celda.\r\nEstas características se ilustran en la figura 1.\r\nFigura 1: Datos tidy. Imagen de Hadley Wickham (https://r4ds.had.co.nz/tidy-data.html)El empleo de este modelo de datos uniforme en todos los paquetes de Tidyverse posibilita aprender y usar sus funciones con mayor facilidad. Además, permite invertir menos esfuerzo en lidiar con diferentes modelos de datos y así dedicar más tiempo y esfuerzo en los problemas de análisis a resolver.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-23T16:17:52-06:00"
    },
    {
      "path": "02-r-tidyverse-dplyr.html",
      "title": "Tidyverse - dplyr",
      "author": [],
      "contents": "\r\n\r\nContents\r\nPreparativos\r\nCarga de paquetes\r\nConjuntos de datos utilizados\r\n\r\nEl paquete dplyr\r\nLa función mutate()\r\nLa función select()\r\nLa función filter()\r\nLa función arrange()\r\nLa función summarise()\r\n\r\n\r\nPreparativos\r\nCarga de paquetes\r\n\r\n\r\n# Carga de dplyr\r\nlibrary(dplyr)\r\n\r\n\r\n\r\nConjuntos de datos utilizados\r\nDatos hidrológicos\r\n\r\n# Carga de datos desde un archivo CSV\r\nrios <-\r\n  read.csv(file = 'https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/hidrologia/fdc/FDC.csv')\r\n\r\n\r\n\r\nCasos de COVID-19 en Costa Rica\r\n\r\n# Carga de datos desde un archivo CSV\r\ncovid <-\r\n  read.csv(file = 'https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/ministerio-salud/covid/ultimafecha_CSV_GENERAL.csv')\r\n\r\n\r\n\r\nEl paquete dplyr\r\nEl paquete dplyr de Tidyverse es descrito como una “gramática para la manipulación de datos, la cual proporciona un conjunto consistente de verbos que ayuda a solucionar los retos de manipulación de datos más comunes”. Los principales “verbos” (i.e. funciones) de esta gramática son:\r\nmutate(): crea nuevas variables, las cuales se expresan como funciones de variables existentes.\r\nselect(): selecciona variables con base en sus nombres.\r\nfilter(): selecciona observaciones con base en sus valores.\r\narrange(): cambia el orden de las filas.\r\nsummarise(): agrupa y resume valores.\r\nTodas estas operaciones pueden combinarse con la función group_by(), la cual ejecuta cualquiera de las operaciones anteriores “en grupo”. Además, dplyr proporciona funciones adicionales para tareas más específicas.\r\nTodas las funciones de dplyr trabajan de manera similar:\r\nEl primer argumento es un data frame. Puede omitirse si la función recibe el data frame a través del operador pipe.\r\nLos argumentos siguientes describen que hacer con el data frame, utilizando los nombres de las variables (sin comillas).\r\nEl resultado es un nuevo data frame.\r\nLas funciones de dplyr pueden encadenarse a través del operador pipe (%>%) (tubo), para formar pipelines (tuberías). En este contexto, un pipeline consiste de una cadena de procesos conectados de forma tal que la salida de cada proceso de la cadena es la entrada del próximo. Esto permite la comunicación y sincronización entre los procesos.\r\nLa función mutate()\r\nLa función mutate() crea nuevas variables en un data frame, las cuales se expresan como funciones de variables existentes. También puede utilizarse para recalcular una variable ya existente.\r\nEn el siguiente bloque de código, se utiliza mutate() para crear una nueva variable en el data frame de ríos. Se utilizan también otras funciones para renombrar las columnas y desplegar los datos.\r\n\r\n\r\n# Despliegue de la estructura del data frame\r\nstr(rios)\r\n\r\n\r\n'data.frame':   3845 obs. of  3 variables:\r\n $ Tiempo             : chr  \"6/22/1973\" \"6/23/1973\" \"6/24/1973\" \"6/25/1973\" ...\r\n $ Pandora.mm..637km2.: num  7.46 6.17 6.32 7.8 7.72 7.83 5.02 3.84 3.21 2.77 ...\r\n $ Banano.mm..90km2.  : num  21 14.8 27.6 19.7 15.2 ...\r\n\r\n# Despliegue de los primeros registros\r\nslice_head(rios, n = 5)\r\n\r\n\r\n     Tiempo Pandora.mm..637km2. Banano.mm..90km2.\r\n1 6/22/1973                7.46             21.02\r\n2 6/23/1973                6.17             14.78\r\n3 6/24/1973                6.32             27.65\r\n4 6/25/1973                7.80             19.68\r\n5 6/26/1973                7.72             15.17\r\n\r\n# Cambio de nombre de las columnas mediante rename()\r\nrios <-\r\n  rios %>%\r\n  rename(fecha = Tiempo,\r\n         pandora = Pandora.mm..637km2.,\r\n         banano = Banano.mm..90km2.)\r\n\r\n# Conversión de una columna a tipo Date y creación de una nueva columna\r\nrios <-\r\n  rios %>%\r\n  mutate(fecha = strptime(fecha, format = \"%m/%d/%Y\"),\r\n         promedio = (pandora + banano) / 2)\r\n\r\n# Verificación de los cambios en la estructura del data frame\r\nstr(rios)\r\n\r\n\r\n'data.frame':   3845 obs. of  4 variables:\r\n $ fecha   : POSIXlt, format: \"1973-06-22\" ...\r\n $ pandora : num  7.46 6.17 6.32 7.8 7.72 7.83 5.02 3.84 3.21 2.77 ...\r\n $ banano  : num  21 14.8 27.6 19.7 15.2 ...\r\n $ promedio: num  14.2 10.5 17 13.7 11.4 ...\r\n\r\n# Visualización de los valores de la nueva columna\r\nslice_head(rios, n = 5)\r\n\r\n\r\n       fecha pandora banano promedio\r\n1 1973-06-22    7.46  21.02   14.240\r\n2 1973-06-23    6.17  14.78   10.475\r\n3 1973-06-24    6.32  27.65   16.985\r\n4 1973-06-25    7.80  19.68   13.740\r\n5 1973-06-26    7.72  15.17   11.445\r\n\r\nLa función select()\r\nLa función select() selecciona variables (i.e. columnas) de un data frame con base en sus nombres.\r\nEn el siguiente bloque de código, se utiiza select() para seleccionar un conjunto de variables del data frame de COVID-19 en Costa Rica. El resultado se guarda en un nuevo data frame.\r\n\r\n\r\n# Selección, renombramiento y conversión de columnas\r\ncovid_columnas_seleccionadas <-\r\n  covid %>%\r\n  select(FECHA, muj_posi, hom_posi) %>%\r\n  rename(\r\n    fecha = FECHA,\r\n    positivos_mujeres = muj_posi,\r\n    positivos_hombres = hom_posi\r\n  ) %>%\r\n  mutate(fecha = strptime(fecha, format = \"%d/%m/%Y\"))\r\n\r\n# Despliegue de una muestra aleatoria de los registros\r\nslice_sample(covid_columnas_seleccionadas, n = 5)\r\n\r\n\r\n       fecha positivos_mujeres positivos_hombres\r\n1 2021-01-19             91912             94965\r\n2 2020-06-16               818               978\r\n3 2020-10-21             47811             51614\r\n4 2020-05-19               405               477\r\n5 2020-08-28             17962             20523\r\n\r\nLa función filter()\r\nLa función filter() selecciona observaciones (i.e. filas) de un data frame con base en sus valores.\r\nEn el siguiente bloque de código, se utiliza filter() para filtrar el data frame de COVID-19 en Costa Rica. El resultado se guarda en un nuevo data frame.\r\n\r\n\r\n# Selección, renombramiento, conversión de columnas y filtrado\r\ncovid_filtrado <-\r\n  covid %>%\r\n  select(FECHA, nue_posi) %>%\r\n  rename(fecha = FECHA, positivos_nuevos = nue_posi) %>%\r\n  mutate(fecha = strptime(fecha, format = \"%d/%m/%Y\")) %>%\r\n  filter(positivos_nuevos >= 2500)\r\n\r\n# Despliegue del data frame con los resultados\r\ncovid_filtrado\r\n\r\n\r\n       fecha positivos_nuevos\r\n1 2021-04-29             2781\r\n2 2021-04-30             2609\r\n3 2021-05-05             2555\r\n4 2021-05-06             2559\r\n5 2021-05-12             3173\r\n\r\nLa función arrange()\r\nLa función arrange() cambia el orden de las observaciones (i.e. filas) de un dataframe.\r\nEn el siguiente bloque de código, se utiliza arrange() para ordenar el data frame de COVID-19 en Costa Rica, después de filtrarlo. El resultado se guarda en un nuevo data frame.\r\n\r\n\r\n# Selección, renombramiento, filtrado y conversión de columnas\r\ncovid_filtrado_ordenado_x_positivos_nuevos <-\r\n  covid %>%\r\n  select(FECHA, nue_posi) %>%\r\n  rename(fecha = FECHA, positivos_nuevos = nue_posi) %>%\r\n  mutate(fecha = strptime(fecha, format = \"%d/%m/%Y\")) %>%\r\n  filter(positivos_nuevos >= 2500) %>%\r\n  arrange(desc(positivos_nuevos))\r\n\r\n# Despliegue del data frame con los resultados\r\ncovid_filtrado_ordenado_x_positivos_nuevos\r\n\r\n\r\n       fecha positivos_nuevos\r\n1 2021-05-12             3173\r\n2 2021-04-29             2781\r\n3 2021-04-30             2609\r\n4 2021-05-06             2559\r\n5 2021-05-05             2555\r\n\r\nLa función summarise()\r\nLa función summarise() agrupa y resume valores de un data frame. Generalmente, se utiliza conjuntamente con group_by(), para agrupar antes los datos.\r\nEn el siguiente bloque de código, se utiliza summarise() para generar un nuevo data frame con los nuevos casos de COVID-19 sumarizados por mes.\r\n\r\n\r\n# Selección, renombramiento, filtrado y conversión de columnas\r\ncovid_positivos_nuevos_sumarizado_x_mes <-\r\n  covid %>%\r\n  select(FECHA, nue_posi) %>%\r\n  rename(fecha = FECHA, positivos_nuevos = nue_posi) %>%\r\n  mutate(fecha = strptime(fecha, format = \"%d/%m/%Y\")) %>%\r\n  group_by(anio = format(fecha,\"%Y\"), mes = format(fecha,\"%m\")) %>%\r\n  summarise(suma_positivos = sum(positivos_nuevos))\r\n\r\n# Despliegue del data frame con los resultados\r\ncovid_positivos_nuevos_sumarizado_x_mes\r\n\r\n\r\n# A tibble: 15 x 3\r\n# Groups:   anio [2]\r\n   anio  mes   suma_positivos\r\n   <chr> <chr>          <int>\r\n 1 2020  03               347\r\n 2 2020  04               372\r\n 3 2020  05               337\r\n 4 2020  06              2403\r\n 5 2020  07             14361\r\n 6 2020  08             23467\r\n 7 2020  09             34473\r\n 8 2020  10             34211\r\n 9 2020  11             29667\r\n10 2020  12             29683\r\n11 2021  01             24959\r\n12 2021  02             10626\r\n13 2021  03             12440\r\n14 2021  04             33645\r\n15 2021  05             25896\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-23T18:05:27-06:00"
    },
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-22T17:18:07-06:00"
    },
    {
      "path": "index.html",
      "title": "GF0604 Procesamiento de datos geográficos 2021-I. Lección 13",
      "description": "Curso GF0604 Procesamiento de datos geográficos. Escuela de Geografía, Universidad de Costa Rica. Primer ciclo lectivo 2021. Lección 13.\n",
      "author": [
        {
          "name": "Manuel Vargas",
          "url": "https://github.com/mfvargas"
        }
      ],
      "contents": "\r\n\r\nContents\r\nResumen\r\nTrabajo previo\r\nContenidos\r\n\r\nResumen\r\nEn esta lección se estudia Tidyverse, una colección de paquetes de R enfocados en ciencia de datos.\r\nTrabajo previo\r\nLea los capítulos del 1 al 8 de Wickham, H., & Grolemund, G. (2017). R for Data Science: Import, Tidy, Transform,Visualize, and Model Data.\r\nContenidos\r\n01 Introducción a Tidyverse02 El paquete dplyr\r\n\r\n\r\n\r\n",
      "last_modified": "2021-05-23T16:18:12-06:00"
    }
  ],
  "collections": []
}
